{"version":3,"sources":["styles/bg2.svg","styles/sizes.js","styles/ColorBoxStyles.js","ColorBox.js","styles/NavbarStyles.js","Navbar.js","PaletteFooter.js","styles/PaletteFooterStyles.js","styles/PaletteStyles.js","Palette.js","MiniPalette.js","styles/MiniPaletteStyles.js","styles/PaletteListStyles.js","PaletteList.js","SingleColorPalette.js","styles/DraggableColorBoxStyles.js","DraggableColorBox.js","DraggableColorList.js","PaletteMetaForm.js","styles/NewPaletteFormNavStyles.js","constants.js","NewPaletteFormNav.js","NewPaletteFormColorPicker.js","styles/NewPaletteFormColorPickerStyles.js","seedColors.js","styles/NewPaletteFormStyles.js","NewPaletteForm.js","colorHelpers.js","Page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","size","xs","sm","md","lg","xl","colorBox","width","height","props","showFullPalette","margin","display","position","cursor","marginBottom","opacity","sizes","copyText","color","chroma","background","luminance","colorName","seeMore","border","right","bottom","textAlign","lineHeight","textTransform","copyButton","top","left","marginLeft","marginTop","outline","fontSize","textDecoration","boxContent","padding","letterSpacing","copyOverlay","zIndex","transition","transform","showOverlay","copyMsg","alignItems","justifyContent","flexDirection","fontWeight","textShadow","showMsg","transitionDelay","ColorBox","state","copied","changeCopyState","bind","this","setState","setTimeout","name","moreURL","classes","text","onCopy","className","style","clsx","to","onClick","e","stopPropagation","Component","withStyles","styles","slider","Navbar","logo","marginRight","backgroundColor","fontFamily","selectContainer","handleChangeSelect","format","target","value","snackOpen","handleChangeFormat","closeSnackbar","level","changeLevel","isSingleColorPalette","defaultValue","min","max","step","onAfterChange","trackStyle","railStyle","handleStyle","boxShadow","Select","onChange","MenuItem","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","message","id","toUpperCase","ContentProps","onClose","action","IconButton","key","aria-label","PaletteFooter","emoji","paletteName","Palette","maxWidth","PaletteColors","goBack","changeColorFormat","val","palette","colors","colorBoxes","map","MiniPalette","deletePalette","openDeleteDialog","handleClick","goToPalette","console","log","miniColorBoxes","miniColor","root","deleteIcon","title","PureComponent","borderRadius","overflow","paddingTop","fontsize","backgroundImage","bg2","backgroundAttachment","container","flexWrap","nav","palettes","boxSizing","gridTemplateColumns","gridGap","heading","PaletteList","deletingId","openDialog","closeDialog","history","push","handleDelete","removePalette","TransitionGroup","CSSTransition","classNames","timeout","Dialog","aria-labelledby","DialogTitle","List","ListItem","button","ListItemAvatar","Avatar","blue","ListItemText","primary","red","SingleColorPalette","_shades","gatherShades","colorId","colorToFilterBy","shades","allColors","concat","filter","slice","shade","DraggableColorBox","SortableElement","DraggableColorList","SortableContainer","removeColor","index","PaletteMetaForm","stage","newPaletteName","handleChange","evt","showEmojiPicker","emojiSelectHandler","newPaletteMetaInfo","native","handleSavePalette","ValidatorForm","addValidationRule","every","toLowerCase","hideForm","onSelect","onSubmit","DialogContent","DialogContentText","label","validators","errorMessages","fullWidth","DialogActions","Button","variant","type","theme","appBar","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","menuButton","spacing","hide","navBtns","link","NewPaletteFormNav","formDialogShowing","showForm","handleSave","handleDrawerOpen","CssBaseline","AppBar","Toolbar","edge","Typography","noWrap","withTheme","NewPaletteFormColorPicker","currentColor","newColorName","updateCurrentColor","newColor","hex","handleSubmit","addNewColor","isPaletteFull","onChangeComplete","picker","ref","instantValidate","colorNameInput","disabled","addColor","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","buttons","NewPaletteForm","handleDrawerClose","savePalette","newPalette","replace","onSortEnd","oldIndex","newIndex","arrayMove","clearColors","addRandomColor","rand","randomColor","p","flat","isRandomColorAlreadyExist","Math","floor","random","length","some","seedColors","maxColors","Drawer","anchor","paper","Divider","gutterBottom","axis","distance","defaultProps","levels","generatePalette","starterPalette","hexColor","numberOfColors","scale","darken","getRange","mode","reverse","i","rgb","css","rgba","Page","children","App","findPalette","find","syncLocalStorage","st","window","localStorage","setItem","JSON","stringify","savedPalettes","parse","getItem","render","location","exact","path","routeProps","match","params","paletteId","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.dcfabda1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg2.2e29480d.svg\";","//https://getbootstrap.com/docs/4.1/layout/overview/\r\n/*\r\n// Extra small devices (portrait phones, less than 576px)\r\n@media (max-width: 575.98px) { ... }\r\n\r\n// Small devices (landscape phones, less than 768px)\r\n@media (max-width: 767.98px) { ... }\r\n\r\n// Medium devices (tablets, less than 992px)\r\n@media (max-width: 991.98px) { ... }\r\n\r\n// Large devices (desktops, less than 1200px)\r\n@media (max-width: 1199.98px) { ... }\r\n\r\n// Extra large devices (large desktops)\r\n// No media query since the extra-large breakpoint has no upper bound on its width\r\n*/\r\n\r\nexport default {\r\n  up() {},\r\n  down(size) {\r\n    const sizes = {\r\n      xs: \"575.98px\",\r\n      sm: \"767.98px\",\r\n      md: \"991.98px\",\r\n      lg: \"1199.98px\",\r\n      xl: \"1400px\", //this one added only for PaletteListStyles.js (root page)\r\n    };\r\n    return `@media (max-width: ${sizes[size]})`;\r\n  },\r\n};\r\n","import chroma from \"chroma-js\";\r\n\r\nimport sizes from \"./sizes\";\r\n\r\nexport default {\r\n  colorBox: {\r\n    width: \"20%\",\r\n    //height: \"25%\",  /* lets dynamically decide the height */\r\n    height: (props) => (props.showFullPalette ? \"25%\" : \"50%\"),\r\n    margin: \"0 auto\",\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    marginBottom: \"-4px\" /* this is required after styling \".see-more\" */,\r\n    \"&:hover button\": {\r\n      opacity: \"1\",\r\n    },\r\n    /*\r\n    \"@media (max-width: 900px)\": {\r\n      //this applies between 0px-500px\r\n      width: \"50%\",\r\n    },\r\n    \"@media (max-width: 500px)\": {\r\n      //this applies between 0px-500px\r\n      width: \"100%\",\r\n    },\r\n//rather than writing down all pixel sizes in every style js file, the method below is far more better\r\n//but first, you need to add ./styles/sizes.js and define sizes...\r\n*/\r\n    [sizes.down(\"lg\")]: {\r\n      width: \"25%\",\r\n      height: (props) => (props.showFullPalette ? \"20%\" : \"33.3333%\"),\r\n    },\r\n    [sizes.down(\"md\")]: {\r\n      width: \"50%\",\r\n      height: (props) => (props.showFullPalette ? \"10%\" : \"20%\"),\r\n    },\r\n    [sizes.down(\"xs\")]: {\r\n      width: \"100%\",\r\n      height: (props) => (props.showFullPalette ? \"5%\" : \"10%\"),\r\n    },\r\n  },\r\n  copyText: {\r\n    color: (props) =>\r\n      chroma(props.background).luminance() >= 0.7 ? \"black\" : \"white\",\r\n  },\r\n  colorName: {\r\n    color: (props) =>\r\n      chroma(props.background).luminance() <= 0.1 ? \"white\" : \"black\",\r\n  },\r\n  seeMore: {\r\n    color: (props) =>\r\n      chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.5)\" : \"white\",\r\n    background: \"rgba(255, 255, 255, 0.3)\",\r\n    position: \"absolute\",\r\n    border: \"none\",\r\n    right: \"0px\",\r\n    bottom: \"0px\",\r\n    width: \"60px\",\r\n    height: \"30px\",\r\n    textAlign: \"center\",\r\n    lineHeight: \"30px\" /* used for centrelizing vertically */,\r\n    textTransform: \"uppercase\",\r\n  },\r\n  copyButton: {\r\n    color: (props) =>\r\n      chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.5)\" : \"white\",\r\n    width: \"100px\",\r\n    height: \"30px\",\r\n    position: \"absolute\",\r\n    display: \"inline-block\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginLeft: \"-50px\" /*to center button, since width=100px*/,\r\n    marginTop: \"-15px\" /*to center button, since height=30px*/,\r\n    textAlign: \"center\",\r\n    outline: \"none\",\r\n    background: \"rgba(255, 255, 255, 0.3)\",\r\n    fontSize: \"1rem\",\r\n    lineHeight: \"30px\" /* used for centrelizing vertically */,\r\n    textTransform: \"uppercase\",\r\n    border: \"none\",\r\n    textDecoration: \"none\",\r\n    opacity: \"0\" /* Copy button completely hidden */,\r\n  },\r\n  boxContent: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    left: \"0px\",\r\n    bottom: \"0px\",\r\n    padding: \"10px\",\r\n    color: \"black\",\r\n    letterSpacing: \"1px\",\r\n    textTransform: \"uppercase\",\r\n    fontSize: \"12px\",\r\n  },\r\n  copyOverlay: {\r\n    opacity: \"0\",\r\n    zIndex: \"0\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    transition: \"transform 0.6s ease-in-out\",\r\n    transform: \"scale(0.1)\" /* you might not notice the difference  */,\r\n  },\r\n  showOverlay: {\r\n    opacity: \"1\",\r\n    transform: \"scale(50)\",\r\n    zIndex: \"9\",\r\n    position: \"absolute\",\r\n  },\r\n  copyMsg: {\r\n    position: \"fixed\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n    fontSize: \"4rem\",\r\n    transform: \"scale(0.1)\",\r\n    opacity: \"0\",\r\n    color: \"white\",\r\n    \"& h1\": {\r\n      fontWeight: \"400\",\r\n      textShadow: \"1px 2px black\",\r\n      background: \"rgba(255, 255, 255, 0.2)\",\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n      marginBottom: \"0\",\r\n      padding: \"1rem\",\r\n      textTransform: \"uppercase\",\r\n      [sizes.down(\"xs\")]: {\r\n        //without this, in xs case, \"COPIED\" message is h1 and too big\r\n        fontSize: \"5rem\",\r\n      },\r\n    },\r\n    \"& p\": {\r\n      fontSize: \"3rem\",\r\n      fontWeight: \"100\",\r\n    },\r\n  },\r\n  showMsg: {\r\n    opacity: 1,\r\n    transform: \"scale(1)\",\r\n    zIndex: 9,\r\n    transition: \"all 0.4s ease-in-out\",\r\n    transitionDelay: \"0.3s\",\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n//import chroma from \"chroma-js\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n//import classNames from \"classnames\";\r\nimport clsx from \"clsx\";\r\n//classnames ==? clsx: here is the answer:\r\n//A tiny (229B) utility for constructing className strings conditionally.\r\n//Also serves as a faster & smaller drop-in replacement for the classnames module.import classNames from \"classnames\";\r\n\r\n//import \"./ColorBox.css\";\r\nimport styles from \"./styles/ColorBoxStyles\";\r\n\r\n//JSS: conditional styling\r\n//with this method, we are checking luminance once, not conditionally in each text\r\n//The styles below moved to a separate file src/ColorBoxStyles.js AND imported here as \"styles\"\r\n/*\r\nconst styles = {\r\n  colorBox: {..... },\r\n  copyText: {......},\r\n  colorName: {......},\r\n  seeMore: {...... },\r\n  copyButton: {.....},\r\n  boxContent: {},\r\n  copyOverlay: {},\r\n  showOverlay: {},\r\n  copyMsg: {},\r\n  showMsg: {},\r\n};\r\n*/\r\n\r\nclass ColorBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { copied: false }; //we need to know because copying process takes 1-2 secs\r\n    this.changeCopyState = this.changeCopyState.bind(this);\r\n  }\r\n\r\n  changeCopyState() {\r\n    this.setState({ copied: true }, () => {\r\n      setTimeout(() => this.setState({ copied: false }), 1500);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      background,\r\n      /* id, paletteId,*/ moreURL,\r\n      //showMoreLink,\r\n      showFullPalette,\r\n      classes /* to get higher order classes like styles --> withStyles */,\r\n    } = this.props; //id is color.id\r\n    const { copied } = this.state;\r\n    //const isDarkColor = chroma(background).luminance() <= 0.1;\r\n    //const isLightColor = chroma(background).luminance() >= 0.7;\r\n    return (\r\n      <CopyToClipboard text={background} onCopy={this.changeCopyState}>\r\n        <div className={classes.colorBox} style={{ background }}>\r\n          {/* The secret div below is the div gets shown hugely and covers the screen when a ColorBox clicked */}\r\n          <div\r\n            //className={`copy-overlay ${copied && \"show\"}`}\r\n            // className={`${classes.copyOverlay} ${\r\n            //   copied && classes.showOverlay\r\n            // }`}\r\n            className={clsx(classes.copyOverlay, {\r\n              [classes.showOverlay]: copied,\r\n            })}\r\n            style={{ background }}\r\n          />\r\n          {/* The another secret div below is the div contains the \"Copied\" message and color rgb info */}\r\n          {/* <div className={`${classes.copyMsg} ${copied && classes.showMsg}`}> */}\r\n          <div className={clsx(classes.copyMsg, { [classes.showMsg]: copied })}>\r\n            <h1>Copied!</h1>\r\n            {/* <p className={`${isLightColor && \"dark-text\"}`}>{background}</p> */}\r\n            <p className={classes.copyText}>{background}</p>\r\n          </div>\r\n          <div>\r\n            {/* <div className=\"box-content\"> */}\r\n            <div className={classes.boxContent}>\r\n              {/* <span className={isDarkColor && \"light-text\"}>{name}</span> */}\r\n              <span className={classes.colorName}>{name}</span>\r\n            </div>\r\n            {/* <button className={`copy-button ${isLightColor && \"dark-text\"}`}> */}\r\n            <button className={classes.copyButton}>Copy</button>\r\n          </div>\r\n          {/* onClick : stopPropagation used to prevent copy animation */}\r\n          {/* /palette/:paletteId/:colorId : we need to pass through :paletteId & :colorId from Palette.js to here (ColorBox.js) */}\r\n          {/* {showMoreLink && ( */}\r\n          {showFullPalette && (\r\n            <Link\r\n              //to={`/palette/${paletteId}/${id}`}\r\n              to={moreURL}\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              {/* <span className={`see-more ${isLightColor && \"dark-text\"}`}> */}\r\n              <span className={classes.seeMore}>More</span>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </CopyToClipboard>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ColorBox);\r\n","import sizes from \"./sizes\";\r\n\r\nexport default {\r\n  slider: {\r\n    width: \"340px\",\r\n    margin: \"0 10px\",\r\n    display: \"inline-block\",\r\n    [sizes.down(\"sm\")]: {\r\n      width: \"200px\",\r\n    },\r\n  },\r\n  Navbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    height: \"6vh\",\r\n  },\r\n  logo: {\r\n    marginRight: \"15px\",\r\n    padding: \"0 13px\",\r\n    fontSize: \"22px\",\r\n    backgroundColor: \"#eceff1\",\r\n    fontFamily: \"Roboto\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"black\",\r\n    },\r\n    [sizes.down(\"xs\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  selectContainer: {\r\n    marginLeft: \"auto\" /* this aligns right */,\r\n    marginRight: \"1rem\",\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Slider from \"rc-slider\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport styles from \"./styles/NavbarStyles\";\r\n//import \"./Navbar.css\";\r\nimport \"rc-slider/assets/index.css\";\r\n\r\n/*\r\nconst styles = {\r\n  slider: {\r\n    width: \"340px\",\r\n    margin: \"0 10px\",\r\n    display: \"inline-block\",\r\n  },\r\n  Navbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n    height: \"6vh\",\r\n  },\r\n  logo: {\r\n    marginRight: \"15px\",\r\n    padding: \"0 13px\",\r\n    fontSize: \"22px\",\r\n    backgroundColor: \"#eceff1\",\r\n    fontFamily: \"Roboto\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      color: \"black\",\r\n    },\r\n  },\r\n  selectContainer: {\r\n    marginLeft: \"auto\" /* this aligns right //,\r\n    marginRight: \"1rem\",\r\n  },\r\n};\r\n*/\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { format: \"hex\", snackOpen: false };\r\n  }\r\n\r\n  handleChangeSelect = (e) => {\r\n    //-->Problematic:\r\n    // this.setState({ format: e.target.value });\r\n    // this.props.handleChangeFormat(this.state.format);\r\n\r\n    //-->Works nice:\r\n    // this.setState({ format: e.target.value }, () => {\r\n    //   this.props.handleChangeFormat(this.state.format);\r\n    // });\r\n\r\n    //-->Works nice also:\r\n    this.setState({ format: e.target.value, snackOpen: true });\r\n    this.props.handleChangeFormat(e.target.value);\r\n  };\r\n\r\n  closeSnackbar = () => {\r\n    this.setState({ snackOpen: false });\r\n  };\r\n\r\n  render() {\r\n    //const { level, changeLevel, handleChangeFormat } = this.props;\r\n    const { level, changeLevel, isSingleColorPalette, classes } = this.props;\r\n    const { format } = this.state;\r\n    return (\r\n      <header className={classes.Navbar}>\r\n        <div className={classes.logo}>\r\n          <Link to=\"/\">react color picker</Link>\r\n        </div>\r\n        {!isSingleColorPalette && (\r\n          <div>\r\n            <span>Level: {level}</span>\r\n            <div className={classes.slider}>\r\n              <Slider\r\n                defaultValue={level}\r\n                min={100}\r\n                max={900}\r\n                step={100}\r\n                onAfterChange={changeLevel}\r\n                trackStyle={{\r\n                  background: \"transparent\",\r\n                }}\r\n                railStyle={{\r\n                  height: \"8px\",\r\n                }}\r\n                handleStyle={{\r\n                  backgroundColor: \"green\",\r\n                  outline: \"none\",\r\n                  border: 0,\r\n                  boxShadow: \"none\",\r\n                  height: 15,\r\n                  width: 15,\r\n                  marginTop: -4,\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        {/* <Select value={format} onChange={handleChangeFormat}> */}\r\n        {/* <div className=\"select-container\"> */}\r\n        <div className={classes.selectContainer}>\r\n          <Select value={format} onChange={this.handleChangeSelect}>\r\n            <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\r\n            <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\r\n            <MenuItem value=\"rgba\">RGBA - rgb(255,255,255, 0.5)</MenuItem>\r\n          </Select>\r\n        </div>\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\r\n          open={this.state.snackOpen}\r\n          autoHideDuration={3000}\r\n          message={\r\n            <span id=\"message-id\">\r\n              Format changed to {format.toUpperCase()}\r\n            </span>\r\n          }\r\n          ContentProps={{\r\n            \"aria-describedby\": \"message-id\",\r\n          }}\r\n          onClose={this.closeSnackbar} //causes to close Snackbar whenever user clicks somewhere\r\n          action={[\r\n            <IconButton\r\n              onClick={this.closeSnackbar}\r\n              color=\"inherit\"\r\n              key=\"close\"\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Navbar);\r\n","//THIS IS A GOOD EXAMPLE OF \"FUNCTION COMPONENT\" USING CONDITIONAL STYLING\r\n//USING material-ui withStyles\r\n\r\nimport React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport styles from \"./styles/PaletteFooterStyles\";\r\n\r\n//The styles below moved to a separate file src/PaletteFooterStyles.js AND imported here as \"styles\"\r\n/*\r\nconst styles = {\r\n  PaletteFooter: {\r\n    backgroundColor: \"white\",\r\n    height: \"5vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  emoji: {\r\n    fontSize: \"1.5rem\",\r\n    margin: \"0 1rem\",\r\n  },\r\n};\r\n*/\r\n\r\n//export const PaletteFooter = (props) => {\r\nconst PaletteFooter = (props) => {\r\n  const { paletteName, emoji, classes } = props;\r\n  return (\r\n    <footer className={classes.PaletteFooter}>\r\n      {paletteName}\r\n      <span className={classes.emoji}>{emoji}</span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(PaletteFooter);\r\n","export default {\r\n  PaletteFooter: {\r\n    backgroundColor: \"white\",\r\n    height: \"5vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  emoji: {\r\n    fontSize: \"1.5rem\",\r\n    margin: \"0 1rem\",\r\n  },\r\n};\r\n","import sizes from \"./sizes\";\r\n\r\nexport default {\r\n  Palette: {\r\n    height: \"98vh\",\r\n    width: \"99vw\",\r\n    maxWidth: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  PaletteColors: {\r\n    height: \"90%\",\r\n  },\r\n  PaletteFooter: {\r\n    backgroundColor: \"white\",\r\n    height: \"5vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  goBack: {\r\n    /* copied from colorBox style in ColorBox.js */\r\n    width: \"20%\",\r\n    height: \"50%\",\r\n    margin: \"0 auto\",\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    marginBottom: \"-4px\" /* this is required after styling \".see-more\" */,\r\n    opacity: \"1\",\r\n    backgroundColor: \"black\",\r\n    //position: \"relative\",  //already available\r\n    \"& a\": {\r\n      color: \"white\",\r\n      width: \"100px\",\r\n      height: \"30px\",\r\n      position: \"absolute\",\r\n      display: \"inline-block\",\r\n      top: \"50%\",\r\n      left: \"50%\",\r\n      marginLeft: \"-50px\" /*to center button, since width=100px*/,\r\n      marginTop: \"-15px\" /*to center button, since height=30px*/,\r\n      textAlign: \"center\",\r\n      outline: \"none\",\r\n      background: \"rgba(255, 255, 255, 0.3)\",\r\n      fontSize: \"1rem\",\r\n      lineHeight: \"30px\" /* used for centrelizing vertically */,\r\n      textTransform: \"uppercase\",\r\n      border: \"none\",\r\n      textDecoration: \"none\",\r\n    },\r\n    [sizes.down(\"lg\")]: {\r\n      width: \"25%\",\r\n      height: \"33.3333%\",\r\n    },\r\n    [sizes.down(\"md\")]: {\r\n      width: \"50%\",\r\n      height: \"20%\",\r\n    },\r\n    [sizes.down(\"xs\")]: {\r\n      width: \"100%\",\r\n      height: \"10%\",\r\n    },\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ColorBox from \"./ColorBox\";\r\n\r\n// import Slider from \"rc-slider\";\r\n// import \"rc-slider/assets/index.css\";\r\nimport Navbar from \"./Navbar\";\r\n\r\n//for specificity reasons \"Palette.css\" should be at the end!\r\n//to overwrite some default styles decided by rc-slider/assets/index.css\r\n//import { PaletteFooter } from \"./PaletteFooter\";\r\nimport PaletteFooter from \"./PaletteFooter\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n//import \"./Palette.css\";\r\n\r\nimport styles from \"./styles/PaletteStyles\";\r\n\r\n//The styles below moved to a separate file src/PaletteStyles.js AND imported here as \"styles\"\r\n//the 2 class below already exist in the PaletteStyles - shared with SingleColorPalette\r\n/*\r\nconst styles = {\r\n  Palette: {\r\n    height: \"98vh\",\r\n    width: \"99vw\",\r\n    maxWidth: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  PaletteColors: {\r\n    height: \"90%\",\r\n  },\r\n};\r\n*/\r\n\r\nclass Palette extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { level: 500, format: \"hex\" };\r\n  }\r\n\r\n  changeLevel = (level) => {\r\n    this.setState({ level });\r\n  };\r\n\r\n  // changeColorFormat = (e) => {\r\n  //   alert(e.target.value);\r\n  // };\r\n\r\n  changeColorFormat = (val) => {\r\n    //alert(val);\r\n    this.setState({ format: val });\r\n  };\r\n\r\n  render() {\r\n    //const colorBoxes = this.props.colors.map((color) => (\r\n    //  <ColorBox background={color.color} name={color.name} />\r\n    // ));\r\n\r\n    //<Palette {...seedColors[4]} /> this changed to <Palette palette={generatePalette(seedColors[4])} /> in App.js\r\n    //Because of that, the code commented above changed like below:\r\n    //(500 selected as starting point - just in the middle )\r\n\r\n    //const colorBoxes = this.props.palette.colors[500].map((color) => (\r\n    const { level, format } = this.state;\r\n    const { classes } = this.props;\r\n    const { colors, paletteName, emoji, id } = this.props.palette;\r\n    const colorBoxes = colors[level].map((color) => (\r\n      // <ColorBox background={color.hex} name={color.name} />\r\n      <ColorBox\r\n        background={color[format]}\r\n        name={color.name}\r\n        key={color.id}\r\n        //id={color.id}\r\n        //paletteId={id}\r\n        moreURL={`/palette/${id}/${color.id}`}\r\n        //showMoreLink={true}\r\n        showFullPalette={true}\r\n      />\r\n    ));\r\n    return (\r\n      <div className={classes.Palette}>\r\n        {/* <div className=\"slider\">\r\n          <Slider\r\n            defaultValue={level}\r\n            min={100}\r\n            max={900}\r\n            step={100}\r\n            onAfterChange={this.changeLevel}\r\n            trackStyle={{\r\n              background: \"transparent\",\r\n            }}\r\n            railStyle={{\r\n              height: \"8px\",\r\n            }}\r\n            handleStyle={{\r\n              backgroundColor: \"green\",\r\n              outline: \"none\",\r\n              border: 0,\r\n              boxShadow: \"none\",\r\n              height: 15,\r\n              width: 15,\r\n              marginTop: -4,\r\n            }}\r\n          />\r\n        </div> */}\r\n        <Navbar\r\n          level={level}\r\n          changeLevel={this.changeLevel}\r\n          handleChangeFormat={this.changeColorFormat}\r\n          isSingleColorPalette={false}\r\n        />\r\n        {/* Navbar goes here */}\r\n        <div className={classes.PaletteColors}>{colorBoxes}</div>\r\n        {/* footer eventually */}\r\n        {/* <footer className=\"Palette-footer\">\r\n          {paletteName}\r\n          <span className=\"emoji\">{emoji}</span>\r\n        </footer> */}\r\n        <PaletteFooter paletteName={paletteName} emoji={emoji} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Palette);\r\n","import React, { PureComponent } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport styles from \"./styles/MiniPaletteStyles\";\r\n\r\n//The styles below moved to a separate file src/MiniPaletteStyles.js AND imported here as \"styles\"\r\n/*\r\nconst styles = {\r\n  root: {   },\r\n  colors: {  },\r\n  title: {  },\r\n  emoji: {  },\r\n  miniColor: {  },\r\n};\r\n*/\r\n\r\n//In order to add deletePalette event handler, we have changed this component from function to class\r\n//function MiniPalette(props) {\r\nclass MiniPalette extends PureComponent {\r\n  //actually we are deleting the palette in the App.js, because all state and localStorage manipulated over there!\r\n  deletePalette = (e) => {\r\n    e.stopPropagation();\r\n    //alert(\"HOPPAAA!\");\r\n    //this.props.handleDelete(this.props.id);\r\n    this.props.openDeleteDialog(this.props.id);\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.goToPalette(this.props.id);\r\n  };\r\n\r\n  render() {\r\n    //const { classes, paletteName, emoji, colors, handleClick } = this.props;\r\n    //const { classes, paletteName, emoji, colors, goToPalette, id } = this.props;\r\n    const { classes, paletteName, emoji, colors } = this.props;\r\n\r\n    //console.log(classes);\r\n    console.log(\"RENDERING Mini Palette:\", paletteName);\r\n    //This component changed to PureComponent, but it still re-renders\r\n    //Because one of the props (handleClick) is changed every time\r\n    //Since this prop sent as handleClick={() => this.goToPalette(palette.id)}\r\n    //Please check from PaletteList.js\r\n    //If we change it\r\n\r\n    const miniColorBoxes = colors.map((color) => (\r\n      <div\r\n        className={classes.miniColor}\r\n        style={{ backgroundColor: color.color }}\r\n        key={color.name}\r\n      ></div>\r\n    ));\r\n\r\n    return (\r\n      //</div><div className={classes.root} onClick={handleClick}>\r\n      //we have changed parent component's how to send handleClick props\r\n      //and here we calling inline function AND THIS IS NOT AFFECTING this component's being PureComponent\r\n      //PS: handleClick changed to goToPalette\r\n      //<div className={classes.root} onClick={() => goToPalette(id)}>\r\n      //Maybe its better to create a method and call it onClick\r\n      <div className={classes.root} onClick={this.handleClick}>\r\n        <DeleteIcon\r\n          className={classes.deleteIcon}\r\n          //inline style used for overcoming css specifity problem\r\n          style={{ transition: \"all 0.3s ease-in-out\" }}\r\n          onClick={this.deletePalette}\r\n        />\r\n        <div className={classes.colors}>\r\n          {/* MINI COLOR BOXES */}\r\n          {miniColorBoxes}\r\n        </div>\r\n        <h5 className={classes.title}>\r\n          {paletteName} <span className={classes.emoji}>{emoji}</span>\r\n        </h5>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MiniPalette);\r\n","export default {\r\n  root: {\r\n    backgroundColor: \"white\",\r\n    border: \"1px solid black\",\r\n    borderRadius: \"5px\",\r\n    padding: \"0.5rem\",\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    cursor: \"pointer\",\r\n    \"&:hover svg\": {\r\n      opacity: \"1\",\r\n    },\r\n  },\r\n  colors: {\r\n    backgroundColor: \"#dae1e4\",\r\n    height: \"150px\",\r\n    width: \"100%\",\r\n    borderRadius: \"5px\",\r\n    overflow: \"hidden\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    margin: \"0\",\r\n    color: \"black\",\r\n    paddingTop: \"0.5rem\",\r\n    fontSize: \"1rem\",\r\n    position: \"relative\",\r\n  },\r\n  emoji: {\r\n    marginLeft: \"0.5rem\",\r\n    fontsize: \"1.5rem\",\r\n  },\r\n  miniColor: {\r\n    height: \"25%\",\r\n    width: \"20%\",\r\n    display: \"inline-block\",\r\n    margin: \"0 auto\",\r\n    position: \"relative\",\r\n    marginBottom: \"-4px\",\r\n  },\r\n  deleteIcon: {\r\n    color: \"white\",\r\n    background: \"#eb3d30\",\r\n    width: \"20px\",\r\n    height: \"20px\",\r\n    position: \"absolute\",\r\n    right: \"0px\",\r\n    top: \"0px\",\r\n    padding: \"10px\",\r\n    zIndex: \"10\",\r\n    opacity: \"0\",\r\n    transition: \"all 0.3s ease-in-out\",\r\n  },\r\n};\r\n","import sizes from \"./sizes\";\r\n\r\n//import bg1 from \"./bg1.svg\";\r\nimport bg2 from \"./bg2.svg\";\r\n\r\nexport default {\r\n  //@global used for defining css classes globally, accessible from all js files!\r\n  \"@global\": {\r\n    \".fade-exit\": {\r\n      opacity: 1,\r\n    },\r\n    \".fade-exit-active\": {\r\n      opacity: 0,\r\n      transition: \"opacity 500ms ease-out\",\r\n    },\r\n  },\r\n  root: {\r\n    //backgroundColor: \"blue\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"center\",\r\n    /* background by SVGBackgrounds.com */\r\n    /*\r\n    backgroundColor: \"#ee3221\",\r\n    backgroundImage: `url(${bg1})`,\r\n    backgroundSize: \"cover\",\r\n    */\r\n    backgroundColor: \"#1215b3\",\r\n    backgroundImage: `url(${bg2})`,\r\n    backgroundAttachment: \"fixed\",\r\n    overflow: \"scroll\",\r\n  },\r\n  container: {\r\n    width: \"50%\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    flexDirection: \"column\",\r\n    flexWrap: \"wrap\",\r\n    //border: \"1px solid white\",\r\n    [sizes.down(\"xl\")]: {\r\n      width: \"70%\",\r\n    },\r\n    [sizes.down(\"xs\")]: {\r\n      width: \"60%\",\r\n    },\r\n  },\r\n  nav: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    justifyContent: \"space-between\",\r\n    color: \"white\",\r\n    alignItems: \"center\",\r\n    \"& a\": {\r\n      color: \"white\",\r\n      textDecoration: \"none\", //to remove underline\r\n    },\r\n  },\r\n  palettes: {\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(3, 30%)\",\r\n    //gridGap: \"5%\",  //% values might be a problem in different browsers!\r\n    gridGap: \"2.5rem\",\r\n    [sizes.down(\"md\")]: {\r\n      gridTemplateColumns: \"repeat(2, 50%)\",\r\n    },\r\n    [sizes.down(\"xs\")]: {\r\n      gridTemplateColumns: \"repeat(1, 100%)\",\r\n      gridGap: \"1rem\",\r\n    },\r\n  },\r\n  heading: {\r\n    fontSize: \"2rem\",\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n//dialog form imports -begin\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\nimport red from \"@material-ui/core/colors/red\";\r\n//dialog form imports -end\r\n\r\nimport MiniPalette from \"./MiniPalette\";\r\nimport styles from \"./styles/PaletteListStyles\";\r\n\r\n//The styles below moved to a separate file src/PaletteListStyles.js AND imported here as \"styles\"\r\n/*\r\nconst styles = {\r\n  root: {\r\n    backgroundColor: \"blue\",\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    justifyContent: \"center\",\r\n  },\r\n  container: {\r\n    width: \"50%\",\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n    flexDirection: \"column\",\r\n    flexWrap: \"wrap\",\r\n    //border: \"1px solid white\",\r\n  },\r\n  nav: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    justifyContent: \"space-between\",\r\n    color: \"white\",\r\n  },\r\n  palettes: {\r\n    boxSizing: \"border-box\",\r\n    width: \"100%\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(3, 30%)\",\r\n    gridGap: \"5%\",\r\n  },\r\n};\r\n*/\r\n\r\n// we have used Link like below, but this caused to underline all text & emojis\r\n//so, we have used history.push, rather than Link\r\n/* \r\n  <Link to={`/palette/${palette.id}`}>\r\n    <MiniPalette {...palette} />\r\n  </Link> \r\n*/\r\n\r\nclass PaletteList extends Component {\r\n  state = { openDeleteDialog: false, deletingId: \"\" };\r\n\r\n  openDialog = (id) => {\r\n    this.setState({ openDeleteDialog: true, deletingId: id });\r\n  };\r\n\r\n  closeDialog = () => {\r\n    this.setState({ openDeleteDialog: false, deletingId: \"\" });\r\n  };\r\n\r\n  //goToPalette = (id) => {  //NO DIFFERENCE (At the beginning, but now its important)\r\n  //goToPalette(id) {\r\n  goToPalette = (id) => {\r\n    //console.log(\"JJI\");\r\n    //since we have used history, \"PaletteList\" component should NOT be called with render in the App.js\r\n    //or, if we still want to use render, then \"routeProps\" should be sent as argument to PaletteList component\r\n    this.props.history.push(`palette/${id}`);\r\n  };\r\n\r\n  handleDelete = () => {\r\n    this.props.removePalette(this.state.deletingId);\r\n    this.closeDialog();\r\n  };\r\n\r\n  render() {\r\n    const { openDeleteDialog } = this.state;\r\n    const { classes, palettes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <div className={classes.container}>\r\n          <nav className={classes.nav}>\r\n            <h1 className={classes.heading}>Palette List</h1>\r\n            <Link to=\"/palette/new\">Create New Palette</Link>\r\n          </nav>\r\n\r\n          {/* below, you can find how mini palettes rendered without using react-transition-group */}\r\n          {/* <div className={classes.palettes}>\r\n              {palettes.map((palette) => (\r\n                <MiniPalette\r\n                  {...palette}\r\n                  handleClick={() => this.goToPalette(palette.id)}\r\n                  handleDelete={removePalette}\r\n                  key={palette.id}\r\n                  id={palette.id}\r\n                />\r\n              ))}\r\n          </div> */}\r\n\r\n          {/* when TransitionGroup added just inside this div, it creates another div, so we cannot use classes.palettes. So, its better to remove that div */}\r\n          {/* <div className={classes.palettes}> */}\r\n          <TransitionGroup className={classes.palettes}>\r\n            {palettes.map((palette) => (\r\n              <CSSTransition key={palette.id} classNames=\"fade\" timeout={500}>\r\n                <MiniPalette\r\n                  {...palette}\r\n                  //handleClick={() => this.goToPalette(palette.id)} //this prevents MiniPalette behave as a PureComponent\r\n                  goToPalette={this.goToPalette} //this causes to change the definition of goToPalette from normal to arrow-function\r\n                  //handleDelete={removePalette}\r\n                  //handleDelete={this.openDialog}\r\n                  openDeleteDialog={this.openDialog}\r\n                  key={palette.id}\r\n                  id={palette.id}\r\n                />\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n          {/* </div> */}\r\n        </div>\r\n        <Dialog\r\n          open={openDeleteDialog}\r\n          aria-labelledby=\"delete-dialog-title\"\r\n          onClose={this.closeDialog}\r\n        >\r\n          <DialogTitle id=\"delete-dialog-title\">\r\n            Delete this palette?\r\n          </DialogTitle>\r\n          <List>\r\n            <ListItem button onClick={this.handleDelete}>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  style={{ backgroundColor: blue[100], color: blue[600] }}\r\n                >\r\n                  <CheckIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Delete\" />\r\n            </ListItem>\r\n            <ListItem button onClick={this.closeDialog}>\r\n              <ListItemAvatar>\r\n                <Avatar style={{ backgroundColor: red[100], color: red[600] }}>\r\n                  <CloseIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Cancel\" />\r\n            </ListItem>\r\n          </List>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(PaletteList);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport ColorBox from \"./ColorBox\";\r\nimport Navbar from \"./Navbar\";\r\n//import { PaletteFooter } from \"./PaletteFooter\";\r\nimport PaletteFooter from \"./PaletteFooter\";\r\n\r\nimport styles from \"./styles/PaletteStyles\";\r\n\r\n//The styles below moved to a separate file src/PaletteStyles.js AND imported here as \"styles\"\r\n/*\r\nconst styles = {\r\n  Palette: {  },\r\n  PaletteColors: {  },\r\n  PaletteFooter: {  },\r\n  goBack: {   },\r\n};\r\n*/\r\nclass SingleColorPalette extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = {\r\n    //   shades: this.gatherShades(this.props.palette, this.props.colorId)\r\n    // }\r\n    //since shades never changes, we do not need to store them in state!!!\r\n    this._shades = this.gatherShades(this.props.palette, this.props.colorId);\r\n    //console.log(this._shades);\r\n    this.state = { format: \"hex\" };\r\n  }\r\n\r\n  gatherShades(palette, colorToFilterBy) {\r\n    //return all shades of given color\r\n    let shades = [];\r\n    let allColors = palette.colors;\r\n\r\n    for (let key in allColors) {\r\n      // shades.push(\r\n      //   allColors[key].filter((color) => color.id === colorToFilterBy)\r\n      // );\r\n      //push creates array of arrays, we need array of objects\r\n      //The push() adds elements to the end of an array and returns the new length of the array. Thus your return here is invalid.\r\n      //The concat() method is used to merge arrays. Concat does not change the existing arrays, but instead returns a new array.\r\n      shades = shades.concat(\r\n        allColors[key].filter((color) => color.id === colorToFilterBy)\r\n      );\r\n    }\r\n    return shades.slice(1);\r\n    //we do not need the first shade named \"colorX 50\", we need van 100 tot 900\r\n  }\r\n\r\n  changeColorFormat = (val) => {\r\n    //alert(val);\r\n    this.setState({ format: val });\r\n  };\r\n\r\n  render() {\r\n    const { format } = this.state;\r\n    const { classes } = this.props;\r\n    const { paletteName, emoji, id } = this.props.palette;\r\n\r\n    //shade is actually means color\r\n    const colorBoxes = this._shades.map((shade) => (\r\n      <ColorBox\r\n        key={shade.name}\r\n        name={shade.name}\r\n        //background={shade.hex}\r\n        background={shade[format]}\r\n        //showMoreLink={false}\r\n        showFullPalette={false}\r\n      />\r\n    ));\r\n    return (\r\n      //<div className=\"SingleColorPalette Palette\">\r\n      <div className={classes.Palette}>\r\n        <Navbar\r\n          handleChangeFormat={this.changeColorFormat}\r\n          isSingleColorPalette={true}\r\n        />\r\n        {/* <h1>Single Color Palette</h1> */}\r\n        {/* </div><div className=\"Palette-colors\"> */}\r\n        <div className={classes.PaletteColors}>\r\n          {colorBoxes}\r\n          {/* <div className=\"go-back ColorBox\"> */}\r\n          <div className={classes.goBack}>\r\n            <Link to={`/palette/${id}`}>GO BACK</Link>\r\n          </div>\r\n        </div>\r\n\r\n        <PaletteFooter paletteName={paletteName} emoji={emoji} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SingleColorPalette);\r\n","import chroma from \"chroma-js\";\r\n\r\nimport sizes from \"./sizes\";\r\n\r\n//const styles = {\r\nexport default {\r\n  root: {\r\n    width: \"20%\",\r\n    height: \"25%\",\r\n    margin: \"0 auto\",\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    cursor: \"pointer\",\r\n    marginBottom: \"-6px\", //this is required after styling \".see-more\",\r\n    \"&:hover svg\": {\r\n      //this styles applied only to the root(DraggableColorBox), when hovered the DraggableColorBox\r\n      //but we want that these styles should be applied to the deleteIcon - but deleteIcon is a dynamic class name like deleteIcon-2939-232\r\n      //if we check the deleteIcon in more detail from the F12/Elements, we see that its an \"svg\"\r\n      //so, we can use this... to make a trick\r\n      color: \"white\",\r\n      transform: \"scale(1.5)\",\r\n    },\r\n    [sizes.down(\"lg\")]: {\r\n      width: \"25%\",\r\n      height: \"20%\",\r\n    },\r\n    [sizes.down(\"md\")]: {\r\n      width: \"50%\",\r\n      height: \"10%\",\r\n    },\r\n    [sizes.down(\"sm\")]: {\r\n      width: \"100%\",\r\n      height: \"5%\",\r\n    },\r\n  },\r\n  boxContent: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    left: \"0px\",\r\n    bottom: \"0px\",\r\n    padding: \"10px\",\r\n    //color: \"rgba(0,0,0, 0.5)\",  //this always adds the new ColorBox with black color\r\n    //we have checked the props of DraggableColorBox.js and see that \"color\" is the background color\r\n    color: (props) =>\r\n      chroma(props.color).luminance() <= 0.1\r\n        ? \"rgba(255,255,255, 0.5)\"\r\n        : \"rgba(0,0,0, 0.5)\",\r\n    letterSpacing: \"1px\",\r\n    textTransform: \"uppercase\",\r\n    fontSize: \"12px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  deleteIcon: {\r\n    transition: \"all 0.3s ease-in-out\",\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { SortableElement } from \"react-sortable-hoc\";\r\n\r\nimport styles from \"./styles/DraggableColorBoxStyles\";\r\n\r\n/*\r\n//moved to styles/DraggableColorBoxStyles.js\r\n\r\nconst styles = {\r\n//...\r\n};\r\n*/\r\n\r\n//const DraggableColorBox = (props) => {\r\n//covered all method inside \"SortableElement\"\r\nconst DraggableColorBox = SortableElement((props) => {\r\n  const { classes, color, name, handleClick } = props;\r\n  return (\r\n    <div className={classes.root} style={{ backgroundColor: color }}>\r\n      <div className={classes.boxContent}>\r\n        <span>{name}</span>\r\n        <DeleteIcon className={classes.deleteIcon} onClick={handleClick} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default withStyles(styles)(DraggableColorBox);\r\n","import React from \"react\";\r\nimport { SortableContainer } from \"react-sortable-hoc\";\r\nimport DraggableColorBox from \"./DraggableColorBox\";\r\n\r\n//const DraggableColorList = ({ colors, removeColor }) => {\r\n//covered all method inside \"SortableContainer\"\r\nconst DraggableColorList = SortableContainer(({ colors, removeColor }) => {\r\n  return (\r\n    <div style={{ height: \"100%\" }}>\r\n      {/* {colors.map((color, index) => ( */}\r\n      {colors.map((color, index) => (\r\n        //<DraggableColorBox color={color} />\r\n        <DraggableColorBox\r\n          index={index}\r\n          key={color.name}\r\n          color={color.color}\r\n          name={color.name}\r\n          handleClick={() => removeColor(color.name)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DraggableColorList;\r\n\r\n//export default SortableContainer(DraggableColorList);\r\n//this also works, without covering all method inside a SortableContainer when definition\r\n","//this components opens a dialog form\r\n//and we are using a separate dialog for emoji picker (this same file)\r\n//what is strange is, this component contains/shows the button which opens the dialog form and dialog itself\r\nimport React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n//import TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nimport { Picker } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\n\r\nexport default class PaletteMetaForm extends Component {\r\n  //state = { open: true, newPaletteName: \"\" };\r\n  state = { stage: \"form\", newPaletteName: \"\" };\r\n  //2 stages: 1-form 2-emoji\r\n\r\n  componentDidMount() {\r\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", (value) =>\r\n      this.props.palettes.every(\r\n        ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\r\n      )\r\n    );\r\n  }\r\n\r\n  //the button opens this dialog moved to the NewPaletteFormNav.js\r\n  // handleClickOpen = () => {\r\n  //   this.setState({ open: true });\r\n  // };\r\n\r\n  // handleClose = () => {\r\n  //   this.setState({ open: false });\r\n  // };\r\n\r\n  handleChange = (evt) => {\r\n    //this.setState({ newPaletteName: evt.target.value });\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  };\r\n\r\n  showEmojiPicker = () => {\r\n    this.setState({ stage: \"emoji\" });\r\n  };\r\n\r\n  emojiSelectHandler = (emoji) => {\r\n    //console.log(emoji);\r\n    const newPaletteMetaInfo = {\r\n      paletteName: this.state.newPaletteName,\r\n      emoji: emoji.native,\r\n    };\r\n    this.props.handleSavePalette(newPaletteMetaInfo);\r\n    //newPaletteMetaInfo --> NewPaletteForm.savePalette(newPaletteNameAndEmoji)\r\n    this.setState({ stage: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      /*handleChange, handleSavePalette, newPaletteName,*/\r\n      hideForm,\r\n    } = this.props;\r\n    //initially newPaletteName & handleChange comes from NewPaletteFormNav as props, but now newPaletteName is controlled as state in here\r\n    const { newPaletteName, stage } = this.state;\r\n    return (\r\n      <div>\r\n        <Dialog open={stage === \"emoji\"} onClose={hideForm}>\r\n          <DialogTitle id=\"emoji-form-dialog-title\">\r\n            Pick a Palette Emoji\r\n          </DialogTitle>\r\n\r\n          <Picker\r\n            onSelect={this.emojiSelectHandler}\r\n            title=\"Pick a Palette Emoji\"\r\n          />\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={stage === \"form\"}\r\n          //onClose={this.handleClose}\r\n          onClose={hideForm}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Choose a palette name\r\n          </DialogTitle>\r\n\r\n          {/* <ValidatorForm onSubmit={() => handleSavePalette(newPaletteName)}> */}\r\n\r\n          <ValidatorForm onSubmit={this.showEmojiPicker}>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                Please enter a name for your new beautiful palette. Make sure it\r\n                is unique.\r\n              </DialogContentText>\r\n\r\n              <TextValidator\r\n                label=\"Palette Name\"\r\n                name=\"newPaletteName\" //required for single \"handleChange\" event for all\r\n                value={newPaletteName}\r\n                onChange={this.handleChange}\r\n                validators={[\"required\", \"isPaletteNameUnique\"]} //order matters!\r\n                errorMessages={[\r\n                  \"enter a palette name\",\r\n                  \"this name already taken\",\r\n                ]}\r\n                fullWidth\r\n                margin=\"normal\"\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              {/* </DialogActions><Button onClick={this.handleClose} color=\"primary\"> */}\r\n              <Button onClick={hideForm} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                //onClick={this.savePalette}\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n              >\r\n                Save Palette\r\n              </Button>\r\n            </DialogActions>\r\n          </ValidatorForm>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","//const drawerWidth = 400;\r\nimport { DRAWER_WIDTH } from \"../constants\";\r\nimport sizes from \"./sizes\";\r\nconst drawerWidth = DRAWER_WIDTH;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    height: \"64px\",\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  navBtns: {\r\n    marginRight: \"1rem\",\r\n    [sizes.down(\"xs\")]: {\r\n      marginRight: \"0.5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    margin: \"0 0.5rem\",\r\n    [sizes.down(\"xs\")]: {\r\n      margin: \"0 0.2rem\",\r\n      padding: \"0.3rem\",\r\n    },\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","export const DRAWER_WIDTH = 400;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n//import classNames from \"classnames\";\r\nimport clsx from \"clsx\";\r\n//classnames ==? clsx: here is the answer:\r\n//A tiny (229B) utility for constructing className strings conditionally.\r\n//Also serves as a faster & smaller drop-in replacement for the classnames module.import classNames from \"classnames\";\r\n//import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n//import MenuIcon from \"@material-ui/icons/Menu\"; //replaced with AddToPhotosIcon\r\n//import { withStyles, withTheme } from \"@material-ui/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n//import DraggableColorBox from \"./DraggableColorBox\"; //moved to inside DraggableColorList.js\r\n//moved to PaletteMetaForm.js\r\n//import { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AddToPhotosIcon from \"@material-ui/icons/AddToPhotos\";\r\nimport PaletteMetaForm from \"./PaletteMetaForm\";\r\nimport styles from \"./styles/NewPaletteFormNavStyles\";\r\n\r\n/*\r\n//moved to styles/NewPaletteFormNavStyles.js\r\n\r\nconst drawerWidth = 400;\r\n\r\nconst styles = (theme) => ({\r\n//...\r\n});\r\n*/\r\n\r\nclass NewPaletteFormNav extends Component {\r\n  //its better approach to move state.newPaletteName to PaletteMetaForm dialog, because there is no other use here\r\n  // state = {\r\n  //   newPaletteName: \"\",\r\n  // };\r\n\r\n  //moved to the PaletteMetaForm.js\r\n  // componentDidMount() {\r\n  //   ValidatorForm.addValidationRule(\"isPaletteNameUnique\", (value) =>\r\n  //     this.props.palettes.every(\r\n  //       ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\r\n  //     )\r\n  //   );\r\n  // }\r\n\r\n  //since we have moved the state.newPaletteName to PaletteMetaForm, then there is no use here\r\n  // handleChange = (evt) => {\r\n  //   //this.setState({ newPaletteName: evt.target.value });\r\n  //   this.setState({ [evt.target.name]: evt.target.value });\r\n  // };\r\n\r\n  state = { formDialogShowing: false };\r\n\r\n  //handleClickOpen = () => {\r\n  showForm = () => {\r\n    this.setState({ formDialogShowing: true });\r\n  };\r\n\r\n  hideForm = () => {\r\n    this.setState({ formDialogShowing: false });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      classes,\r\n      open,\r\n      handleSave,\r\n      handleDrawerOpen,\r\n      palettes,\r\n    } = this.props;\r\n    const { /*newPaletteName, */ formDialogShowing } = this.state;\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          className={clsx(classes.appBar, {\r\n            [classes.appBarShift]: open,\r\n          })}\r\n          color=\"default\"\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              //className={clsx(classes.menuButton, open && classes.hide)}\r\n              //Here below (same as above), you can see how to add many classes conditionally\r\n              // className={clsx(classes.menuButton, {\r\n              //   [classes.class1]: open,\r\n              //   [classes.class2]: open && xxx,\r\n              //   [classes.class3]: !yyy,\r\n              // })}\r\n              className={clsx(classes.menuButton, {\r\n                [classes.hide]: open,\r\n              })}\r\n            >\r\n              <AddToPhotosIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Create New Palette\r\n            </Typography>\r\n          </Toolbar>\r\n          <div className={classes.navBtns}>\r\n            {/* \r\n            //all this code moved to the PaletteMetaForm.js\r\n            <ValidatorForm onSubmit={() => handleSave(newPaletteName)}>\r\n              <TextValidator\r\n                label=\"Palette Name\"\r\n                name=\"newPaletteName\" //required for single \"handleChange\" event for all\r\n                value={newPaletteName}\r\n                onChange={this.handleChange}\r\n                validators={[\"required\", \"isPaletteNameUnique\"]} //order matters!\r\n                errorMessages={[\r\n                  \"enter a palette name\",\r\n                  \"this name already taken\",\r\n                ]}\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                //onClick={this.savePalette}\r\n                type=\"submit\"\r\n              >\r\n                Save Palette\r\n              </Button>\r\n            </ValidatorForm>\r\n */}\r\n            <Link to=\"/\" className={classes.link}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.button}\r\n              >\r\n                Go Back\r\n              </Button>\r\n            </Link>\r\n\r\n            {/* Open form dialog */}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              //onClick={this.handleClickOpen}\r\n              onClick={this.showForm}\r\n              className={classes.button}\r\n            >\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </AppBar>\r\n\r\n        {formDialogShowing && (\r\n          <PaletteMetaForm\r\n            //handleChange={this.handleChange}\r\n            handleSavePalette={handleSave}\r\n            //newPaletteName={newPaletteName}\r\n            palettes={palettes}\r\n            hideForm={this.hideForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//export default NewPaletteFormNav;\r\nexport default withStyles(styles, { withTheme: true })(NewPaletteFormNav);\r\n","import React, { Component } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport Button from \"@material-ui/core/Button\";\r\n//import DraggableColorBox from \"./DraggableColorBox\"; //moved to inside DraggableColorList.js\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport styles from \"./styles/NewPaletteFormColorPickerStyles\";\r\n\r\n/*\r\n//moved to styles/NewPaletteFormNavStyles.js\r\n\r\nconst styles = {\r\n//...\r\n};\r\n*/\r\n\r\nclass NewPaletteFormColorPicker extends Component {\r\n  state = {\r\n    currentColor: \"teal\",\r\n    newColorName: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    ValidatorForm.addValidationRule(\"isColorNameUnique\", (value) =>\r\n      this.props.colors.every(\r\n        ({ name }) => name.toLowerCase() !== value.toLowerCase()\r\n      )\r\n    );\r\n\r\n    ValidatorForm.addValidationRule(\"isColorUnique\", (value) =>\r\n      //BE CAREFUL: We are not using the TextField's \"value\", we are using the ChromePickers color value which is in the state (currentColor)\r\n      this.props.colors.every(\r\n        ({ color }) =>\r\n          color.toLowerCase() !== this.state.currentColor.toLowerCase()\r\n      )\r\n    );\r\n  }\r\n\r\n  updateCurrentColor = (newColor) => {\r\n    //console.log(newColor.hex);\r\n    this.setState({ currentColor: newColor.hex });\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    //this.setState({ newColorName: evt.target.value });\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const newColor = {\r\n      color: this.state.currentColor,\r\n      name: this.state.newColorName,\r\n    };\r\n    this.props.addNewColor(newColor);\r\n    this.setState({ newColorName: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { isPaletteFull, classes } = this.props;\r\n    const { currentColor, newColorName } = this.state;\r\n    return (\r\n      <div>\r\n        <ChromePicker\r\n          color={currentColor}\r\n          onChangeComplete={this.updateCurrentColor}\r\n          className={classes.picker}\r\n        />\r\n        {/* <ValidatorForm onSubmit={this.addNewColor}> */}\r\n        <ValidatorForm\r\n          onSubmit={this.handleSubmit}\r\n          ref=\"form\"\r\n          instantValidate={false}\r\n        >\r\n          <TextValidator\r\n            value={newColorName}\r\n            name=\"newColorName\" //required for single \"handleChange\" event for all\r\n            onChange={this.handleChange}\r\n            validators={[\"required\", \"isColorNameUnique\", \"isColorUnique\"]} //order matters!\r\n            errorMessages={[\r\n              \"enter a color name\",\r\n              \"color name must be unique\",\r\n              \"color already in the palette\",\r\n            ]}\r\n            className={classes.colorNameInput}\r\n            variant=\"filled\"\r\n            margin=\"normal\"\r\n            label=\"Color Name\"\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{\r\n              backgroundColor: isPaletteFull ? \"grey\" : currentColor,\r\n            }}\r\n            //onClick={this.addNewColor}\r\n            type=\"submit\"\r\n            disabled={isPaletteFull}\r\n            className={classes.addColor}\r\n          >\r\n            {isPaletteFull ? \"Palette Full\" : \"Add Color\"}\r\n            {/* Add Color */}\r\n          </Button>\r\n        </ValidatorForm>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(NewPaletteFormColorPicker);\r\n","//const styles = {\r\nexport default {\r\n  picker: {\r\n    width: \"100% !important\",\r\n    marginTop: \"2rem\",\r\n  },\r\n  addColor: {\r\n    width: \"100%\",\r\n    padding: \"1rem\",\r\n    marginTop: \"1rem\",\r\n    fontSize: \"1rem\",\r\n  },\r\n  colorNameInput: {\r\n    width: \"100%\",\r\n    height: \"70px\",\r\n    //margin //defined on the component itself\r\n  },\r\n};\r\n","export default [\r\n  {\r\n    paletteName: \"Material UI Colors\",\r\n    id: \"material-ui-colors\",\r\n    emoji: \"🎨\",\r\n    colors: [\r\n      { name: \"red\", color: \"#F44336\" },\r\n      { name: \"pink\", color: \"#E91E63\" },\r\n      { name: \"purple\", color: \"#9C27B0\" },\r\n      { name: \"deeppurple\", color: \"#673AB7\" },\r\n      { name: \"indigo\", color: \"#3F51B5\" },\r\n      { name: \"blue\", color: \"#2196F3\" },\r\n      { name: \"lightblue\", color: \"#03A9F4\" },\r\n      { name: \"cyan\", color: \"#00BCD4\" },\r\n      { name: \"teal\", color: \"#009688\" },\r\n      { name: \"green\", color: \"#4CAF50\" },\r\n      { name: \"lightgreen\", color: \"#8BC34A\" },\r\n      { name: \"lime\", color: \"#CDDC39\" },\r\n      { name: \"yellow\", color: \"#FFEB3B\" },\r\n      { name: \"amber\", color: \"#FFC107\" },\r\n      { name: \"orange\", color: \"#FF9800\" },\r\n      { name: \"deeporange\", color: \"#FF5722\" },\r\n      { name: \"brown\", color: \"#795548\" },\r\n      { name: \"grey\", color: \"#9E9E9E\" },\r\n      { name: \"bluegrey\", color: \"#607D8B\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors v1\",\r\n    id: \"flat-ui-colors-v1\",\r\n    emoji: \"🤙\",\r\n    colors: [\r\n      { name: \"Turquoise\", color: \"#1abc9c\" },\r\n      { name: \"Emerald\", color: \"#2ecc71\" },\r\n      { name: \"PeterRiver\", color: \"#3498db\" },\r\n      { name: \"Amethyst\", color: \"#9b59b6\" },\r\n      { name: \"WetAsphalt\", color: \"#34495e\" },\r\n      { name: \"GreenSea\", color: \"#16a085\" },\r\n      { name: \"Nephritis\", color: \"#27ae60\" },\r\n      { name: \"BelizeHole\", color: \"#2980b9\" },\r\n      { name: \"Wisteria\", color: \"#8e44ad\" },\r\n      { name: \"MidnightBlue\", color: \"#2c3e50\" },\r\n      { name: \"SunFlower\", color: \"#f1c40f\" },\r\n      { name: \"Carrot\", color: \"#e67e22\" },\r\n      { name: \"Alizarin\", color: \"#e74c3c\" },\r\n      { name: \"Clouds\", color: \"#ecf0f1\" },\r\n      { name: \"Concrete\", color: \"#95a5a6\" },\r\n      { name: \"Orange\", color: \"#f39c12\" },\r\n      { name: \"Pumpkin\", color: \"#d35400\" },\r\n      { name: \"Pomegranate\", color: \"#c0392b\" },\r\n      { name: \"Silver\", color: \"#bdc3c7\" },\r\n      { name: \"Asbestos\", color: \"#7f8c8d\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors Dutch\",\r\n    id: \"flat-ui-colors-dutch\",\r\n    emoji: \"🇳🇱\",\r\n    colors: [\r\n      { name: \"Sunflower\", color: \"#FFC312\" },\r\n      { name: \"Energos\", color: \"#C4E538\" },\r\n      { name: \"BlueMartina\", color: \"#12CBC4\" },\r\n      { name: \"LavenderRose\", color: \"#FDA7DF\" },\r\n      { name: \"BaraRose\", color: \"#ED4C67\" },\r\n      { name: \"RadiantYellow\", color: \"#F79F1F\" },\r\n      { name: \"AndroidGreen\", color: \"#A3CB38\" },\r\n      { name: \"MediterraneanSea\", color: \"#1289A7\" },\r\n      { name: \"LavenderTea\", color: \"#D980FA\" },\r\n      { name: \"VerryBerry\", color: \"#B53471\" },\r\n      { name: \"PuffinsBill\", color: \"#EE5A24\" },\r\n      { name: \"PixelatedGrass\", color: \"#009432\" },\r\n      { name: \"MerchantMarineBlue\", color: \"#0652DD\" },\r\n      { name: \"ForgottenPurple\", color: \"#9980FA\" },\r\n      { name: \"HollyHock\", color: \"#833471\" },\r\n      { name: \"RedPigment\", color: \"#EA2027\" },\r\n      { name: \"TurkishAqua\", color: \"#006266\" },\r\n      { name: \"20000LeaguesUnderTheSea\", color: \"#1B1464\" },\r\n      { name: \"CircumorbitalRing\", color: \"#5758BB\" },\r\n      { name: \"MagentaPurple\", color: \"#6F1E51\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors American\",\r\n    id: \"flat-ui-colors-american\",\r\n    emoji: \"🇺🇸\",\r\n    colors: [\r\n      { name: \"LightGreenishBlue\", color: \"#55efc4\" },\r\n      { name: \"FadedPoster\", color: \"#81ecec\" },\r\n      { name: \"GreenDarnerTail\", color: \"#74b9ff\" },\r\n      { name: \"ShyMoment\", color: \"#a29bfe\" },\r\n      { name: \"CityLights\", color: \"#dfe6e9\" },\r\n      { name: \"MintLeaf\", color: \"#00b894\" },\r\n      { name: \"RobinsEggBlue\", color: \"#00cec9\" },\r\n      { name: \"ElectronBlue\", color: \"#0984e3\" },\r\n      { name: \"ExodusFruit\", color: \"#6c5ce7\" },\r\n      { name: \"SoothingBreeze\", color: \"#b2bec3\" },\r\n      { name: \"SourLemon\", color: \"#ffeaa7\" },\r\n      { name: \"FirstDate\", color: \"#fab1a0\" },\r\n      { name: \"PinkGlamour\", color: \"#ff7675\" },\r\n      { name: \"Pico8Pink\", color: \"#fd79a8\" },\r\n      { name: \"AmericanRiver\", color: \"#636e72\" },\r\n      { name: \"BrightYarrow\", color: \"#fdcb6e\" },\r\n      { name: \"OrangeVille\", color: \"#e17055\" },\r\n      { name: \"Chi-Gong\", color: \"#d63031\" },\r\n      { name: \"PrunusAvium\", color: \"#e84393\" },\r\n      { name: \"DraculaOrchid\", color: \"#2d3436\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors Aussie\",\r\n    id: \"flat-ui-colors-aussie\",\r\n    emoji: \"🇦🇺\",\r\n    colors: [\r\n      { name: \"Beekeeper\", color: \"#f6e58d\" },\r\n      { name: \"SpicedNectarine\", color: \"#ffbe76\" },\r\n      { name: \"PinkGlamour\", color: \"#ff7979\" },\r\n      { name: \"JuneBud\", color: \"#badc58\" },\r\n      { name: \"CoastalBreeze\", color: \"#dff9fb\" },\r\n      { name: \"Turbo\", color: \"#f9ca24\" },\r\n      { name: \"QuinceJelly\", color: \"#f0932b\" },\r\n      { name: \"CarminePink\", color: \"#eb4d4b\" },\r\n      { name: \"PureApple\", color: \"#6ab04c\" },\r\n      { name: \"HintOfIcePack\", color: \"#c7ecee\" },\r\n      { name: \"MiddleBlue\", color: \"#7ed6df\" },\r\n      { name: \"Heliotrope\", color: \"#e056fd\" },\r\n      { name: \"ExodusFruit\", color: \"#686de0\" },\r\n      { name: \"DeepKoamaru\", color: \"#30336b\" },\r\n      { name: \"SoaringEagle\", color: \"#95afc0\" },\r\n      { name: \"GreenlandGreen\", color: \"#22a6b3\" },\r\n      { name: \"SteelPink\", color: \"#be2edd\" },\r\n      { name: \"Blurple\", color: \"#4834d4\" },\r\n      { name: \"DeepCove\", color: \"#130f40\" },\r\n      { name: \"WizardGrey\", color: \"#535c68\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors British\",\r\n    id: \"flat-ui-colors-british\",\r\n    emoji: \"🇬🇧\",\r\n    colors: [\r\n      { name: \"ProtossPylon\", color: \"#00a8ff\" },\r\n      { name: \"Periwinkle\", color: \"#9c88ff\" },\r\n      { name: \"Rise-N-Shine\", color: \"#fbc531\" },\r\n      { name: \"DownloadProgress\", color: \"#4cd137\" },\r\n      { name: \"Seabrook\", color: \"#487eb0\" },\r\n      { name: \"VanaDylBlue\", color: \"#0097e6\" },\r\n      { name: \"MattPurple\", color: \"#8c7ae6\" },\r\n      { name: \"NanohanachaGold\", color: \"#e1b12c\" },\r\n      { name: \"SkirretGreen\", color: \"#44bd32\" },\r\n      { name: \"Naval\", color: \"#40739e\" },\r\n      { name: \"NasturcianFlower\", color: \"#e84118\" },\r\n      { name: \"LynxWhite\", color: \"#f5f6fa\" },\r\n      { name: \"BlueberrySoda\", color: \"#7f8fa6\" },\r\n      { name: \"MazarineBlue\", color: \"#273c75\" },\r\n      { name: \"BlueNights\", color: \"#353b48\" },\r\n      { name: \"HarleyOrange\", color: \"#c23616\" },\r\n      { name: \"HintOfPensive\", color: \"#dcdde1\" },\r\n      { name: \"ChainGangGrey\", color: \"#718093\" },\r\n      { name: \"PicoVoid\", color: \"#192a56\" },\r\n      { name: \"ElectroMagnetic\", color: \"#2f3640\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors Spanish\",\r\n    id: \"flat-ui-colors-spanish\",\r\n    emoji: \"🇪🇸\",\r\n    colors: [\r\n      { name: \"JacksonsPurple\", color: \"#40407a\" },\r\n      { name: \"C64Purple\", color: \"#706fd3\" },\r\n      { name: \"SwanWhite\", color: \"#f7f1e3\" },\r\n      { name: \"SummerSky\", color: \"#34ace0\" },\r\n      { name: \"CelestialGreen\", color: \"#33d9b2\" },\r\n      { name: \"LuckyPoint\", color: \"#2c2c54\" },\r\n      { name: \"Liberty\", color: \"#474787\" },\r\n      { name: \"HotStone\", color: \"#aaa69d\" },\r\n      { name: \"DevilBlue\", color: \"#227093\" },\r\n      { name: \"PalmSpringsSplash\", color: \"#218c74\" },\r\n      { name: \"FlourescentRed\", color: \"#ff5252\" },\r\n      { name: \"SyntheticPumpkin\", color: \"#ff793f\" },\r\n      { name: \"CrocodileTooth\", color: \"#d1ccc0\" },\r\n      { name: \"MandarinSorbet\", color: \"#ffb142\" },\r\n      { name: \"SpicedButterNut\", color: \"#ffda79\" },\r\n      { name: \"EyeOfNewt\", color: \"#b33939\" },\r\n      { name: \"ChileanFire\", color: \"#cd6133\" },\r\n      { name: \"GreyPorcelain\", color: \"#84817a\" },\r\n      { name: \"AlamedaOchre\", color: \"#cc8e35\" },\r\n      { name: \"Desert\", color: \"#ccae62\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors Indian\",\r\n    id: \"flat-ui-colors-indian\",\r\n    emoji: \"🇮🇳\",\r\n    colors: [\r\n      { name: \"OrchidOrange\", color: \"#FEA47F\" },\r\n      { name: \"SpiroDiscoBall\", color: \"#25CCF7\" },\r\n      { name: \"HoneyGlow\", color: \"#EAB543\" },\r\n      { name: \"SweetGarden\", color: \"#55E6C1\" },\r\n      { name: \"FallingStar\", color: \"#CAD3C8\" },\r\n      { name: \"RichGardenia\", color: \"#F97F51\" },\r\n      { name: \"ClearChill\", color: \"#1B9CFC\" },\r\n      { name: \"WhitePepper\", color: \"#F8EFBA\" },\r\n      { name: \"Keppel\", color: \"#58B19F\" },\r\n      { name: \"ShipsOfficer\", color: \"#2C3A47\" },\r\n      { name: \"FieryFuchsia\", color: \"#B33771\" },\r\n      { name: \"BlueBell\", color: \"#3B3B98\" },\r\n      { name: \"GeorgiaPeach\", color: \"#FD7272\" },\r\n      { name: \"OasisStream\", color: \"#9AECDB\" },\r\n      { name: \"BrightUbe\", color: \"#D6A2E8\" },\r\n      { name: \"MagentaPurple\", color: \"#6D214F\" },\r\n      { name: \"EndingNavyBlue\", color: \"#182C61\" },\r\n      { name: \"SasquatchSocks\", color: \"#FC427B\" },\r\n      { name: \"PineGlade\", color: \"#BDC581\" },\r\n      { name: \"HighlighterLavender\", color: \"#82589F\" },\r\n    ],\r\n  },\r\n  {\r\n    paletteName: \"Flat UI Colors French\",\r\n    id: \"flat-ui-colors-french\",\r\n    emoji: \"🇫🇷\",\r\n    colors: [\r\n      { name: \"FlatFlesh\", color: \"#fad390\" },\r\n      { name: \"MelonMelody\", color: \"#f8c291\" },\r\n      { name: \"Livid\", color: \"#6a89cc\" },\r\n      { name: \"Spray\", color: \"#82ccdd\" },\r\n      { name: \"ParadiseGreen\", color: \"#b8e994\" },\r\n      { name: \"SquashBlossom\", color: \"#f6b93b\" },\r\n      { name: \"MandarinRed\", color: \"#e55039\" },\r\n      { name: \"AzraqBlue\", color: \"#4a69bd\" },\r\n      { name: \"Dupain\", color: \"#60a3bc\" },\r\n      { name: \"AuroraGreen\", color: \"#78e08f\" },\r\n      { name: \"IcelandPoppy\", color: \"#fa983a\" },\r\n      { name: \"TomatoRed\", color: \"#eb2f06\" },\r\n      { name: \"YueGuangBlue\", color: \"#1e3799\" },\r\n      { name: \"GoodSamaritan\", color: \"#3c6382\" },\r\n      { name: \"Waterfall\", color: \"#38ada9\" },\r\n      { name: \"CarrotOrange\", color: \"#e58e26\" },\r\n      { name: \"JalapenoRed\", color: \"#b71540\" },\r\n      { name: \"DarkSapphire\", color: \"#0c2461\" },\r\n      { name: \"ForestBlues\", color: \"#0a3d62\" },\r\n      { name: \"ReefEncounter\", color: \"#079992\" },\r\n    ],\r\n  },\r\n];\r\n","//const drawerWidth = 400;\r\n\r\nimport { DRAWER_WIDTH } from \"../constants\";\r\nconst drawerWidth = DRAWER_WIDTH;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n    width: \"100%\",\r\n  },\r\n  content: {\r\n    height: `calc(100vh - 64px)`,\r\n    flexGrow: 1,\r\n    //padding: theme.spacing(3),\r\n    padding: 0,\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  container: {\r\n    width: \"90%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  buttons: {\r\n    width: \"100%\",\r\n  },\r\n  button: {\r\n    width: \"50%\",\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import React, { Component } from \"react\";\r\nimport clsx from \"clsx\";\r\n//import { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\n//import { withStyles, withTheme } from \"@material-ui/styles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n//import DraggableColorBox from \"./DraggableColorBox\"; //moved to inside DraggableColorList.js\r\nimport DraggableColorList from \"./DraggableColorList\";\r\nimport { arrayMove } from \"react-sortable-hoc\";\r\nimport NewPaletteFormNav from \"./NewPaletteFormNav\";\r\nimport NewPaletteFormColorPicker from \"./NewPaletteFormColorPicker\";\r\nimport seedColors from \"./seedColors\";\r\nimport styles from \"./styles/NewPaletteFormStyles\";\r\n\r\n/*\r\n//moved to styles/NewPaletteFormStyles.js\r\n\r\nconst drawerWidth = 400;\r\n\r\nconst styles = (theme) => ({\r\n//...\r\n});\r\n*/\r\n\r\nclass NewPaletteForm extends Component {\r\n  static defaultProps = {\r\n    maxColors: 20,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: true,\r\n      //currentColor: \"teal\",  //moved to NewPaletteFormColorPicker.js\r\n      //colors: [{ color: \"blue\", name: \"blue\" }],\r\n      //colors: props.palettes[0].colors, //this.props. also works //loading initial palette as using index 0 palette as a template\r\n      //colors: props.palettes[0] ? props.palettes[0].colors : [],\r\n      colors: props.palettes[0]\r\n        ? props.palettes[0].colors\r\n        : seedColors[0].colors,\r\n      //newColorName: \"\", //moved to NewPaletteFormColorPicker.js\r\n      newPaletteName: \"\",\r\n    };\r\n  }\r\n  //state = { open: false };\r\n\r\n  componentDidMount() {\r\n    // custom rule will have name 'isColorNameUnique'\r\n    /*\r\n    ValidatorForm.addValidationRule(\"isColorNameUnique\", (value) => {\r\n      //return this.state.colors.every((color) => color.name !== value);\r\n      return this.state.colors.every(\r\n        ({ name }) => name.toLowerCase() !== value.toLowerCase()\r\n      );\r\n    });\r\n    */\r\n    //YOU NOTICED THE DIFFERENCE BETWEEN THE COMMENTED CODE ABOVE AND THIS BELOW;\r\n    //there is {return ...} above, but no {} and because of that no \"return\" below\r\n    /*\r\n    //moved to NewPaletteFormColorPicker.js\r\n    ValidatorForm.addValidationRule(\"isColorNameUnique\", (value) =>\r\n      this.state.colors.every(\r\n        ({ name }) => name.toLowerCase() !== value.toLowerCase()\r\n      )\r\n    );\r\n\r\n    ValidatorForm.addValidationRule(\"isColorUnique\", (value) =>\r\n      //BE CAREFUL: We are not using the TextField's \"value\", we are using the ChromePickers color value which is in the state (currentColor)\r\n      this.state.colors.every(\r\n        ({ color }) =>\r\n          color.toLowerCase() !== this.state.currentColor.toLowerCase()\r\n      )\r\n    );\r\n    */\r\n    /*\r\n    //moved to NewPaletteFormNav.js\r\n    ValidatorForm.addValidationRule(\"isPaletteNameUnique\", (value) =>\r\n      this.props.palettes.every(\r\n        ({ paletteName }) => paletteName.toLowerCase() !== value.toLowerCase()\r\n      )\r\n    );\r\n    */\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  /*\r\n  //moved to NewPaletteFormColorPicker.js\r\n    updateCurrentColor = (newColor) => {\r\n    console.log(newColor.hex);\r\n    this.setState({ currentColor: newColor.hex });\r\n  };\r\n  */\r\n\r\n  //addNewColor = () => {\r\n  addNewColor = (newColor) => {\r\n    // const newColor = {\r\n    //   color: this.state.currentColor,\r\n    //   name: this.state.newColorName,\r\n    // };\r\n    //this.setState({ colors: [...this.state.colors, this.state.currentColor] });\r\n    this.setState({\r\n      colors: [...this.state.colors, newColor],\r\n      //newColorName: \"\",\r\n    });\r\n  };\r\n\r\n  //No need to use here anymore, this function moved to NewPaletteFormNav.js and NewPaletteFormColorPicker.js\r\n  /*\r\n  handleChange = (evt) => {\r\n    //this.setState({ newColorName: evt.target.value });\r\n    //this.setState({ newPaletteName: evt.target.value });\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  };\r\n  */\r\n\r\n  /*\r\n  //this method below might be named as \"handleSubmit\"\r\n  //savePalette = () => {\r\n  //savePalette = (newPaletteName) => {\r\n  savePalette = (newPaletteNameAndEmoji) => {\r\n    //App.js is the place where keeping the track of all palettes\r\n    //savePalette send as a prop from App to this component\r\n    //const newName = \"New Test Palette\";\r\n    //const newName = this.state.newPaletteName; //not possible anymore\r\n    const newPalette = {\r\n      //paletteName: newName,\r\n      //paletteName: newPaletteName,\r\n      paletteName: newPaletteNameAndEmoji.paletteName,\r\n      emoji: newPaletteNameAndEmoji.emoji,\r\n      //id: newName.toLowerCase().replace(/ /g, \"-\"),\r\n      //id: newPaletteName.toLowerCase().replace(/ /g, \"-\"),\r\n      id: newPaletteNameAndEmoji.paletteName.toLowerCase().replace(/ /g, \"-\"),\r\n      colors: this.state.colors,\r\n    };\r\n    this.props.savePalette(newPalette);\r\n    this.props.history.push(\"/\");\r\n    //we noticed that this component do not has access to history,\r\n    //so, we have changed the Route calling, added routeProps\r\n  };\r\n*/\r\n\r\n  savePalette = (newPalette) => {\r\n    //be careful: newPalette object only contains name & emoji\r\n    //we are adding other info below\r\n    newPalette.id = newPalette.paletteName.toLowerCase().replace(/ /g, \"-\");\r\n    newPalette.colors = this.state.colors;\r\n    this.props.savePalette(newPalette);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  removeColor = (colorName) => {\r\n    this.setState({\r\n      colors: this.state.colors.filter((color) => color.name !== colorName),\r\n    });\r\n  };\r\n\r\n  onSortEnd = ({ oldIndex, newIndex }) => {\r\n    this.setState(({ colors }) => ({\r\n      colors: arrayMove(colors, oldIndex, newIndex),\r\n    }));\r\n  };\r\n\r\n  clearColors = () => {\r\n    this.setState({ colors: [] });\r\n  };\r\n\r\n  /*\r\n  addRandomColor = () => {\r\n    //pick random color from existing Palettes\r\n    //flat joins array of arrays into one single array\r\n    const allColors = this.props.palettes.map((p) => p.colors).flat();\r\n    //console.log(allColors); //PROBLEM: If there is no saved palette then this allColors is []\r\n    const rand = Math.floor(Math.random() * allColors.length);\r\n    const randomColor = allColors[rand];\r\n    this.setState({ colors: [...this.state.colors, randomColor] });\r\n  };\r\n  */\r\n\r\n  /* \r\n  //  THIS IS MY SOLUTION TO PREVENT ADDING SAME COLORS RANDOMLY\r\n    addRandomColor = () => {\r\n    //pick random color from existing Palettes\r\n    //flat joins array of arrays into one single array\r\n    const allColors = this.props.palettes.map((p) => p.colors).flat();\r\n    //console.log(allColors); //PROBLEM: If there is no saved palette then this allColors is []\r\n    const rand = Math.floor(Math.random() * allColors.length);\r\n    const randomColor = allColors[rand];\r\n    const randomColorAlreadyExist = this.state.colors.filter(\r\n      (color) => color.name === randomColor.name\r\n    );\r\n    //console.log(randomColor.name, randomColorAlreadyExist);\r\n    if (randomColorAlreadyExist.length === 0)\r\n      this.setState({ colors: [...this.state.colors, randomColor] });\r\n    else alert(\"Escaped from adding existing color: \" + randomColor.name);\r\n  };\r\n*/\r\n\r\n  //  THIS IS THE FINAL BEST SOLUTION TO PREVENT ADDING SAME COLORS RANDOMLY\r\n  addRandomColor = () => {\r\n    //pick random color from existing Palettes\r\n    //flat joins array of arrays into one single array\r\n    const allColors = this.props.palettes.map((p) => p.colors).flat();\r\n    //console.log(allColors); //PROBLEM: If there is no saved palette then this allColors is []\r\n    let rand;\r\n    let randomColor;\r\n    let isRandomColorAlreadyExist = true;\r\n    while (isRandomColorAlreadyExist) {\r\n      rand = Math.floor(Math.random() * allColors.length);\r\n      randomColor = allColors[rand];\r\n      isRandomColorAlreadyExist = this.state.colors.some(\r\n        (color) => color.name === randomColor.name\r\n      );\r\n      //console.log(randomColor);\r\n    }\r\n    this.setState({ colors: [...this.state.colors, randomColor] });\r\n  };\r\n\r\n  render() {\r\n    //const classes = useStyles();\r\n    //const theme = useTheme();\r\n    const { classes, maxColors, palettes } = this.props;\r\n    //const { open, colors, currentColor, newColorName } = this.state;\r\n    const { open, colors } = this.state;\r\n    const isPaletteFull = colors.length >= maxColors;\r\n    return (\r\n      <div className={classes.root}>\r\n        {/* Navbar moved to NewPaletteFormNav.js */}\r\n        {/* BE CAREFUL: classes directly passed to the NewPaletteFormNav as is, no styling defined in NewPaletteFormNav */}\r\n\r\n        <NewPaletteFormNav\r\n          open={open}\r\n          //classes={classes}  //styles added to NewPaletteFormNav.js\r\n          palettes={palettes}\r\n          handleSave={this.savePalette}\r\n          handleDrawerOpen={this.handleDrawerOpen}\r\n        />\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"persistent\"\r\n          anchor=\"left\"\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <div className={classes.container}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Design Your Palette\r\n            </Typography>\r\n            <div className={classes.buttons}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={this.clearColors}\r\n                className={classes.button}\r\n              >\r\n                Clear Palette\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.addRandomColor}\r\n                disabled={isPaletteFull}\r\n                className={classes.button}\r\n              >\r\n                Random Color\r\n              </Button>\r\n            </div>\r\n            {/* ColorPicker & ValidatorForm(ColorName field + AddColor button) moved to the NewPaletteFormColorPicker.js */}\r\n            <NewPaletteFormColorPicker\r\n              isPaletteFull={isPaletteFull}\r\n              addNewColor={this.addNewColor}\r\n              colors={colors}\r\n            />\r\n          </div>\r\n        </Drawer>\r\n        <main\r\n          className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          {/*\r\n          <ul>\r\n            {this.state.colors.map((color) => (\r\n              <li style={{ backgroundColor: color }}>{color}</li>\r\n            ))}\r\n          </ul>\r\n          */}\r\n          {/* \r\n          this.state.colors.map((color) => (\r\n            //<DraggableColorBox color={color} />\r\n            <DraggableColorBox\r\n              key={color.name}\r\n              color={color.color}\r\n              name={color.name}\r\n              handleClick={() => this.removeColor(color.name)}\r\n            />\r\n          ))\r\n          */}\r\n          <DraggableColorList\r\n            colors={colors}\r\n            removeColor={this.removeColor}\r\n            axis=\"xy\" //draggable both horizontal & vertical\r\n            onSortEnd={this.onSortEnd}\r\n            distance={20} //drag is not counted as a drag movement unless it is more than 20px\r\n          />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);\r\n","/*\r\n//reminder...\r\n{\r\n  paletteName: \"Material UI Colors\",\r\n  id: \"material-ui-colors\",\r\n  emoji: \"🎨\",\r\n  colors: [\r\n    { name: \"red\", color: \"#F44336\" },\r\n    { name: \"pink\", color: \"#E91E63\" },\r\n    { name: \"purple\", color: \"#9C27B0\" },\r\n    { name: \"deeppurple\", color: \"#673AB7\" },\r\n    { name: \"indigo\", color: \"#3F51B5\" },\r\n    { name: \"blue\", color: \"#2196F3\" },\r\n    { name: \"lightblue\", color: \"#03A9F4\" },\r\n    { name: \"cyan\", color: \"#00BCD4\" },\r\n    { name: \"teal\", color: \"#009688\" },\r\n    { name: \"green\", color: \"#4CAF50\" },\r\n    { name: \"lightgreen\", color: \"#8BC34A\" },\r\n    { name: \"lime\", color: \"#CDDC39\" },\r\n    { name: \"yellow\", color: \"#FFEB3B\" },\r\n    { name: \"amber\", color: \"#FFC107\" },\r\n    { name: \"orange\", color: \"#FF9800\" },\r\n    { name: \"deeporange\", color: \"#FF5722\" },\r\n    { name: \"brown\", color: \"#795548\" },\r\n    { name: \"grey\", color: \"#9E9E9E\" },\r\n    { name: \"bluegrey\", color: \"#607D8B\" },\r\n  ],\r\n},\r\n*/\r\n\r\nimport chroma from \"chroma-js\";\r\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n\r\nfunction generatePalette(starterPalette) {\r\n  let newPalette = {\r\n    paletteName: starterPalette.paletteName,\r\n    id: starterPalette.id,\r\n    emoji: starterPalette.emoji,\r\n    colors: {\r\n      // 50: [],\r\n      // 100: [],\r\n      // 200: [],\r\n      // ......\r\n    },\r\n  };\r\n\r\n  //newPalette.colors filled below:\r\n  for (let level of levels) {\r\n    newPalette.colors[level] = [];\r\n  }\r\n  for (let color of starterPalette.colors) {\r\n    let scale = getScale(color.color, 10).reverse();\r\n    //console.log(scale);\r\n    for (let i in scale) {\r\n      newPalette.colors[levels[i]].push({\r\n        name: `${color.name} ${levels[i]}`,\r\n        id: color.name.toLowerCase().replace(/ /g, \"-\"),\r\n        hex: scale[i],\r\n        rgb: chroma(scale[i]).css(),\r\n        rgba: chroma(scale[i])\r\n          .css()\r\n          .replace(\"rgb\", \"rgba\")\r\n          .replace(\")\", \",1.0)\"),\r\n      });\r\n    }\r\n  }\r\n  return newPalette;\r\n}\r\n\r\nfunction getRange(hexColor) {\r\n  //black --- color --- white\r\n  //color(darkened) --- color --- white\r\n  const end = \"#fff\";\r\n  return [chroma(hexColor).darken(1.4).hex(), hexColor, end];\r\n}\r\n\r\nfunction getScale(hexColor, numberOfColors) {\r\n  return chroma.scale(getRange(hexColor)).mode(\"lab\").colors(numberOfColors);\r\n  //returns 10 colors (if numberOfColors === 10)\r\n}\r\n\r\nexport { generatePalette };\r\n","import React from \"react\";\r\n\r\nimport \"./Page.css\";\r\n\r\n/*\r\nexport const Page = (props) => {\r\n  return <section className=\"page\">{props.children}</section>;\r\n};\r\n*/\r\n\r\nexport const Page = ({ children }) => {\r\n  return <section className=\"page\">{children}</section>;\r\n};\r\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nimport Palette from \"./Palette\";\nimport PaletteList from \"./PaletteList\";\nimport SingleColorPalette from \"./SingleColorPalette\";\nimport NewPaletteForm from \"./NewPaletteForm\";\n\nimport seedColors from \"./seedColors\";\nimport { generatePalette } from \"./colorHelpers\";\n\n//import \"./App.css\"; //removed, because all styling about \"Page\" moved to the Page.css\n\nimport { Page } from \"./Page\";\n\n//<Palette palette={seedColors[4]} />\n//<Palette {...seedColors[4]} />\n\nclass App extends Component {\n  //normally, there was no constructor defined in this class\n  //until savedPalette & usage of local storage\n  //this constructor used only for this purpose, state definition need not to move inside\n  constructor(props) {\n    super(props);\n    const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n    this.state = { palettes: savedPalettes || seedColors };\n  }\n\n  //state = { palettes: seedColors };\n\n  findPalette = (id) => {\n    //seedColors is an array of \"palette\"s\n    //return seedColors.find((palette) => palette.id === id);\n    return this.state.palettes.find((palette) => palette.id === id);\n  };\n\n  savePalette = (newPalette) => {\n    //console.log(newPalette);\n    //this.setState({ palettes: [...this.state.palettes, newPalette] });\n    /*\n    this.setState({ palettes: [...this.state.palettes, newPalette] }, () => {\n      this.syncLocalStorage();\n    });\n    */\n    //here below is the simplified version\n    this.setState(\n      { palettes: [...this.state.palettes, newPalette] },\n      this.syncLocalStorage\n    );\n  };\n\n  removePalette = (id) => {\n    this.setState(\n      (st) => ({\n        palettes: st.palettes.filter((palette) => palette.id !== id),\n      }),\n      this.syncLocalStorage\n    );\n  };\n\n  syncLocalStorage = () => {\n    //save palettes to local storage\n    //since localStorage only accepts strings...\n    window.localStorage.setItem(\n      \"palettes\",\n      JSON.stringify(this.state.palettes)\n    );\n  };\n\n  render() {\n    //console.log(generatePalette(seedColors[4]));\n    //<Route exact path=\"/\" render={() => <h1>Palette List</h1>} />\n\n    //In order to use TransitionGroup & CSSTransition; we have created another Route outside of Switch,\n    //And wrapped everything (Switch) inside these two components, we have also used \"location\" routeProps\n    //Additionally, for smooth fade effect, we have wrapped each rendered component with a div with className=\"page\"\n    //we have added this class into the App.css\n    //Then we have refactored that, rather than using a wrapper div we have decided to use another component (Page) to wrap other components\n    //For CSSTransition, if we have used \"fade\" as classNames, this means that this transition also use the classes defined globally in PaletteListStyles.js\n    //...and these fading classes are used for fading away a MiniPalette from the PaletteList when deleted\n    //So, we need other fading classes, and named them \"page\", defined in Page.css\n    return (\n      <Route\n        render={({ location }) => (\n          <TransitionGroup>\n            <CSSTransition key={location.key} classNames=\"page\" timeout={500}>\n              <Switch location={location}>\n                <Route\n                  exact\n                  path=\"/palette/new\"\n                  //render={() => <NewPaletteForm savePalette={this.savePalette} />}\n                  render={(routeProps) => (\n                    // <div className=\"page\">\n                    <Page>\n                      <NewPaletteForm\n                        savePalette={this.savePalette}\n                        palettes={\n                          this.state.palettes.length > 0\n                            ? this.state.palettes\n                            : seedColors\n                        } //this whole list required for validating new palette name, checking if the new name exists\n                        {...routeProps}\n                      />\n                    </Page>\n                  )}\n                />\n                <Route\n                  exact\n                  path=\"/\"\n                  //render={() => <PaletteList palettes={seedColors} />}\n                  //since, we have started to use \"history.push\" in the PaletteList.js we need to pass routeProps\n                  render={(routeProps) => (\n                    //<PaletteList palettes={seedColors} {...routeProps} />\n                    //<div className=\"page\"><PaletteList....../></div>\n                    <Page>\n                      <PaletteList\n                        palettes={this.state.palettes}\n                        removePalette={this.removePalette}\n                        {...routeProps}\n                      />\n                    </Page>\n                  )}\n                />\n                {/*\n        <Route\n          exact\n          path=\"/palette/:id\"\n          render={() => <h1>Individual Palette</h1>}\n        />\n        */}\n                {/* we need to take this \"id\", retrieve palette data from seedColors and generate palette and finally call Palette component  */}\n                {/* IMPORTANT!!!: Below you can see the very clever way of using \"routeProps\", instantly accessing \"id\" in the route and using it when calling a method */}\n                <Route\n                  exact\n                  path=\"/palette/:id\"\n                  render={(routeProps) => (\n                    //<div className=\"page\"><Palette....../></div>\n                    <Page>\n                      <Palette\n                        palette={generatePalette(\n                          this.findPalette(routeProps.match.params.id)\n                        )}\n                      />\n                    </Page>\n                  )}\n                />\n                {/* <Route path=\"/palette/:paletteId/:colorId\" render={() => <h1>single color page</h1>} /> */}\n                {/* <Route path=\"/palette/:paletteId/:colorId\" render={() => <SingleColorPalette />} /> */}\n                <Route\n                  path=\"/palette/:paletteId/:colorId\"\n                  render={(routeProps) => (\n                    //<div className=\"page\"><SingleColorPalette....../></div>\n                    <Page>\n                      <SingleColorPalette\n                        colorId={routeProps.match.params.colorId}\n                        palette={generatePalette(\n                          //this is too much data sending, no need to send all palette\n                          //but somehow we will extract required data (shades for only one color) in the SingleColorPalette.js\n                          this.findPalette(routeProps.match.params.paletteId)\n                        )}\n                      />\n                    </Page>\n                  )}\n                />\n                <Route\n                  //for all unknown routes, show root route\n                  render={(routeProps) => (\n                    <Page>\n                      <PaletteList\n                        palettes={this.state.palettes}\n                        removePalette={this.removePalette}\n                        {...routeProps}\n                      />\n                    </Page>\n                  )}\n                />\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        )}\n      ></Route>\n\n      //<div>\n      //  <Palette palette={generatePalette(seedColors[4])} />\n      //</div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}